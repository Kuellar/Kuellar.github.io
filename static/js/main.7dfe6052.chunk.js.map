{"version":3,"sources":["components/PublicRoute.js","components/layout/BasicLayout.js","pages/LoadingPage.js","components/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["PublicRoute","path","PublicLayout","layout","Component","component","exact","BasicLayout","children","LoadingPage","LandingPage","React","lazy","Routes","Suspense","fallback","render","to","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"8LAaeA,EAVK,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,KAAcC,EAAyC,EAAjDC,OAAiCC,EAAgB,EAA3BC,UACjD,OACE,cAAC,IAAD,CAAOC,OAAK,EAACL,KAAMA,EAAnB,SACE,cAACC,EAAD,UACE,cAACE,EAAD,SCLKG,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,OACE,eAAC,WAAD,WAEE,qCACCA,MCDQC,EAJK,WAClB,OAAO,6CCGHC,EAAcC,IAAMC,MAAK,kBAAM,gCAExBC,EAAS,WACpB,OACE,cAAC,IAAMC,SAAP,CAAgBC,SAAU,cAAC,EAAD,IAA1B,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAaZ,OAAQI,EAAaN,KAAK,IAAII,UAAWK,IACtD,cAAC,IAAD,CAAOM,OAAQ,kBAAM,cAAC,IAAD,CAAUC,GAAG,eCC3BC,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,UACE,cAAC,EAAD,SCIOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASb,OACP,cAAC,IAAMc,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7dfe6052.chunk.js","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nconst PublicRoute = ({ path, layout: PublicLayout, component: Component }) => {\n  return (\n    <Route exact path={path}>\n      <PublicLayout>\n        <Component />\n      </PublicLayout>\n    </Route>\n  );\n};\n\nexport default PublicRoute;\n","import React, { Fragment } from \"react\";\n\nexport const BasicLayout = ({ children }) => {\n  return (\n    <Fragment>\n      {/* <Header /> */}\n      <p>Test</p>\n      {children}\n    </Fragment>\n  );\n};\n","import React from \"react\";\n\nconst LoadingPage = () => {\n  return <p>Cargando...</p>;\n};\n\nexport default LoadingPage;\n","import React from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport PublicRoute from \"./PublicRoute\";\nimport { BasicLayout } from \"./layout/BasicLayout\";\nimport LoadingPage from \"../pages/LoadingPage\";\n\nconst LandingPage = React.lazy(() => import(\"../pages/LandingPage\"));\n\nexport const Routes = () => {\n  return (\n    <React.Suspense fallback={<LoadingPage />}>\n      <Switch>\n        <PublicRoute layout={BasicLayout} path=\"/\" component={LandingPage} />\n        <Route render={() => <Redirect to=\"/\" />} />\n      </Switch>\n    </React.Suspense>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Routes } from \"./components/Routes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Routes />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}